<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Home - Social Media</title>
    <link rel="stylesheet">
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        
        .container {
            display: flex;
            height: 100vh;
            justify-content: space-between;
        }
        
        .sidebar, .right-sidebar {
            width: 20%;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .sidebar ul, .right-sidebar ul {
            list-style-type: none;
            padding: 0;
        }
        
        .feed {
            width: 60%;
            padding: 20px;
        }

        /* Story Carousel Styling */
        .story-carousel {
            display: flex;
            overflow-x: auto;
            gap: 15px;
            padding: 10px 0;
            background-color: #ffffff;
            border-bottom: 1px solid #ddd;
            margin-bottom: 20px;
        }

        .story {
            width: 80px;
            flex-shrink: 0;
            text-align: center;
            cursor: pointer;
        }

        .story img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid transparent;
            transition: border-color 0.3s;
        }

        .story img:hover {
            border-color: #4caf50; /* Border color on hover */
        }

        .story p {
            font-size: 12px;
            margin-top: 5px;
            color: #333;
        }

        /* Existing Post and Modal Styling */
        .create-post-box {
            width: 100%;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 10px;
            background-color: #f8f8f8;
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-bottom: 20px;
            cursor: pointer;
        }

        .create-post-input {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .profile-icon .profile-img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #4caf50; /* Placeholder color for the profile icon */
        }

        .create-post-input input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 20px;
            font-size: 16px;
            color: #555;
            background-color: #f1f1f1;
        }

        /* Modal Styling */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #ffffff;
            margin: 10% auto;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            max-width: 500px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            cursor: pointer;
        }
        .search-results {
            margin-top: 15px;
        }
        
        .user-result {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }
        
        .user-result img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .user-result p {
            flex-grow: 1;
        }
        
        .user-result .add-friend-btn {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <aside>
                <p>Welcome, <strong><%= user.firstName %> <%= user.lastName %></strong></p>
                <ul>
                    <li><a href="/home/profile">Profile</a></li>
                    <li><a href="/friends">Friends</a></li>
                    <li><a href="/chats">Chats</a></li>
                    
                </ul>
                <h4>Notifications</h4>
                <ul id="notificationsList"></ul>
                <button onclick="toggleSearch()">Search Friends</button>
    <div id="searchTab" style="display: none;">
        <input type="text" id="searchInput" placeholder="Search users..." oninput="searchUsers()">
        <ul id="searchResults">
           
        </ul>
    </div>
            </aside>
        </div>
       

        <div class="feed">
            <!-- Story Carousel -->
            <section class="story-carousel">
                <div class="story" onclick="openUploadModal()">
                    <img src="/path/to/your/profile-icon.png" alt="Your Story">
                    <p>Your Story</p>
                </div>
                <% stories.forEach(story => { %>
                    <div class="story" onclick="viewStory('<%= story.mediaUrl %>')">
                        <img src="<%= story.user.profileImage || '/path/to/default-profile.png' %>" alt="<%= story.user.firstName %>">
                        <p><%= story.user.firstName %></p>
                    </div>
                <% }) %>
            </section>

            <!-- New Post Box -->
            <div class="create-post-box" onclick="openModal()">
                <div class="create-post-input">
                    <div class="profile-icon">
                        <img src="/path/to/your/profile-icon.png" alt="Profile" class="profile-img">
                    </div>
                    <input type="text" placeholder="Create Post" readonly>
                </div>
            </div>

            <!-- Modal for Creating a Post -->
            <div id="postModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal()">&times;</span>
                    <h3>Create a Post</h3>
                    <form action="/home/create-post" method="POST" enctype="multipart/form-data">
                        <div class="form-group">
                            <textarea name="content" placeholder="What's on your mind?" required></textarea>
                        </div>
                        <div class="form-group">
                            <input type="file" name="mediaFile" accept="image/*,video/*">
                        </div>
                        <div class="form-group">
                            <label for="privacy">Privacy:</label>
                            <select name="privacy" id="privacy">
                                <option value="public">Public</option>
                                <option value="friends">Friends Only</option>
                                <option value="private">Private</option>
                            </select>
                        </div>
                        <button type="submit" class="post-button">Post</button>
                    </form>
                </div>
            </div>

            <!-- Modal for Uploading a Story -->
            <div id="uploadStoryModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeUploadModal()">&times;</span>
                    <h3>Upload a Story</h3>
                    <form action="/home/upload-story" method="POST" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="storyFile">Select a photo or video</label>
                            <input type="file" name="storyFile" id="storyFile" accept="image/*,video/*" required>
                        </div>
                        <div class="form-group">
                            <label for="storyText">Add a caption (optional)</label>
                            <textarea name="storyText" id="storyText" rows="3" placeholder="Say something..."></textarea>
                        </div>
                        <button type="submit" class="post-button">Upload Story</button>
                    </form>
                </div>
            </div>

            <!-- Modal for Viewing a Story -->
            <div id="storyModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeStoryModal()">&times;</span>
                    <img id="storyImage" src="" alt="Story Image" style="width: 100%; height: auto; border-radius: 10px;">
                </div>
            </div>

            <!-- Posts Feed Section -->
            <section class="posts">
                <h2>Posts</h2>
                <% posts.forEach(post => { %>
                    <article class="post">
                        <p><strong><%= post.user.firstName %>:</strong> <%= post.content %></p>
                        <% if (post.mediaUrl) { %>
                            <img src="<%= post.mediaUrl %>" alt="Post media" style="min-width: 100%; max-width: 100%;" />
                        <% } %>
                        <p class="privacy-level">Privacy: <%= post.privacy %></p>
                    </article>
                <% }) %>
            </section>
        </div>

        <div class="right-sidebar">
            <aside>
                <h2>Suggestions</h2>
                <!-- Suggested friends -->
            </aside>
        </div>
    </div>

    <!-- JavaScript to handle modal behavior -->
    <script>
        function openModal() {
            document.getElementById("postModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("postModal").style.display = "none";
        }

        function openUploadModal() {
            document.getElementById("uploadStoryModal").style.display = "block";
        }

        function closeUploadModal() {
            document.getElementById("uploadStoryModal").style.display = "none";
        }

        function viewStory(url) {
            document.getElementById("storyImage").src = url;
            document.getElementById("storyModal").style.display = "block";
        }

        function closeStoryModal() {
            document.getElementById("storyModal").style.display = "none";
        }

        window.onclick = function(event) {
            const postModal = document.getElementById("postModal");
            const storyModal = document.getElementById("storyModal");
            const uploadStoryModal = document.getElementById("uploadStoryModal");

            if (event.target === postModal) {
                closeModal();
            } else if (event.target === storyModal) {
                closeStoryModal();
            } else if (event.target === uploadStoryModal) {
                closeUploadModal();
            }
        }
        function openSearchModal() {
            document.getElementById("searchModal").style.display = "block";
        }
        
        function closeSearchModal() {
            document.getElementById("searchModal").style.display = "none";
        }
        
        
        
        function toggleSearch() {
            const searchTab = document.getElementById('searchTab');
            searchTab.style.display = searchTab.style.display === 'none' ? 'block' : 'none';
        }
    
        async function searchUsers() {
            const query = document.getElementById('searchInput').value;
            if (!query) return document.getElementById('searchResults').innerHTML = '';
        
            try {
                const response = await fetch(`/home/search-users?query=${query}`);
                const users = await response.json();
                
                console.log("Users received:", users); // Log the received users on the client side
        
                const resultsList = document.getElementById('searchResults');
                resultsList.innerHTML = ''; // Clear previous results
        
                users.forEach(user => {
                    const li = document.createElement('li');
                    
                    // Display username or fallback to firstName
                    li.textContent = user.username ? user.username : user.firstName;
        
                    // Create add/remove button based on friend status
                    const button = document.createElement('button');
                    button.textContent = user.isFriend ? '-' : '+';
                    button.onclick = () => user.isFriend ? removeFriend(user._id) : addFriend(user._id);
        
                    li.appendChild(button);
                    resultsList.appendChild(li);
                });
            } catch (error) {
                console.error("Error searching users:", error);
            }
        }
    
        async function addFriend(userId) {
            try {
                const response = await fetch('/friend/friend-request/send', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ targetUserId: userId })
                });
    
                if (response.ok) {
                    alert('Friend request sent');
                    searchUsers(); // Refresh search results
                }
            } catch (error) {
                console.error("Error sending friend request:", error);
            }
        }
    
        async function removeFriend(userId) {
            try {
                const response = await fetch('/friend/friend/remove', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ friendId: userId })
                });
    
                if (response.ok) {
                    alert('Friend removed');
                    searchUsers(); // Refresh search results
                }
            } catch (error) {
                console.error("Error removing friend:", error);
            }
        }
    
        async function loadNotifications() {
            try {
                const response = await fetch('/home/notifications');
                const notifications = await response.json();
    
                const notificationsList = document.getElementById('notificationsList');
                notificationsList.innerHTML = '';
    
                notifications.forEach(notification => {
                    const li = document.createElement('li');
                    li.textContent = `${notification.type === 'friend-request' ? 'Friend Request' : 'Friend Accepted'} from ${notification.from.username}`;
                    notificationsList.appendChild(li);
                });
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }
    
        loadNotifications();
    </script>
</body>
</html>
